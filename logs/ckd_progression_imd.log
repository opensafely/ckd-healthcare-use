------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\users\lsh1703468\documents\repo\ckd-healthcare-use\logs/ckd_progression_imd.log
  log type:  text
 opened on:   2 Mar 2023, 11:22:24

. 
. cap file close tablecontent

. file open tablecontent using ./output/ckd_progression_imd.csv, write text replace

. 
. **Column headings
. *There are three column headings for each year 2017-2022:
. *Column 1 = the number of people in each CKD group as of the beginning of each year (i.e. in April)
. *Column 2 = the number of people who remain within the same CKD group, progress to a more advanced CKD group, or die by the end of the year (i.e. by the subsequent April)
. *Column 3 = Column 2 as a percentage of Column 1
. file write tablecontent _tab _tab ("N_2017") _tab ("April_2018") _tab ("N_2018") _tab ("April_2019") _tab ("N_2019") _tab ("April_2020") _tab ("N_2020") _tab ("April_2021") _tab ("N_2021") _tab ("April_2022") _tab ("N_2022") _tab ("April_2023") _n(2)

. 
. **Loops through datasets for each year `x' 2017-2022
. local year "2017 2018 2019 2020 2021 2022"

. foreach x of local year {
  2. **Disclosure minimisation
. *safecount provides a count with any counts <=5 returned at "<=5"
. *round(r(N),5) rounds counts to the nearest 5 with any counts <=5 returned as "."
. forvalues imd = 1/5 {
  3. use ./output/`x'_ckd_complete.dta, clear
  4. *CKD stage 3 and above only
. drop if ckd_group==1
  5. drop if imd !=`imd'
  6. **Overall
. qui safecount
  7. local baseline_ckd_`x'`imd' = round(r(N),5)
  8. *Total number of people in group who do not progress by the end of the year
. qui safecount if ckd_progression==0
  9. local none_ckd_`x'`imd' = round(r(N),5)
 10. *Total number of people in group who progress to CKD stage 4/5 (without KRT) by the end of the year
. qui safecount if ckd_progression==2
 11. local ckd4_ckd_`x'`imd' = round(r(N),5)
 12. *Total number of people in group who progress to dialysis by the end of the year
. qui safecount if ckd_progression==3
 13. local dialysis_ckd_`x'`imd' = round(r(N),5)
 14. *Total number of people in group who progress to kidney kt by the end of the year
. qui safecount if ckd_progression==4
 15. local kt_ckd_`x'`imd' = round(r(N),5)
 16. *Total number of people in group who progress to KRT (unclear modality) by the end of the year
. qui safecount if ckd_progression==5
 17. local unclear_ckd_`x'`imd' = round(r(N),5)
 18. *Total number of people in group who die by the end of the year
. qui safecount if ckd_progression==6
 19. local deceased_ckd_`x'`imd' = round(r(N),5)
 20. 
. **CKD stage 3
. *Number of people in group (baseline_ckd3_`x'`imd') at the beginning of each year ckd3_`x'`imd'
. qui safecount if ckd_group==2
 21. local baseline_ckd3_`x'`imd' = round(r(N),5)
 22. *Number of people in group who do not progress by the end of the year
. qui safecount if ckd_group==2 & ckd_progression==0
 23. local none_ckd3_`x'`imd' = round(r(N),5)
 24. *Number of people in group who progress to CKD stage 4/5 (without KRT) by the end of the year
. qui safecount if ckd_group==2 & ckd_progression==2
 25. local ckd4_ckd3_`x'`imd' = round(r(N),5)
 26. *Number of people in group who progress to dialysis by the end of the year
. qui safecount if ckd_group==2 & ckd_progression==3
 27. local dialysis_ckd3_`x'`imd' = round(r(N),5)
 28. *Number of people in group who progress to kidney transplant by the end of the year
. qui safecount if ckd_group==2 & ckd_progression==4
 29. local kt_ckd3_`x'`imd' = round(r(N),5)
 30. *Number of people in group who progress to KRT (unclear modality) by the end of the year
. qui safecount if ckd_group==2 & ckd_progression==5
 31. local unclear_ckd3_`x'`imd' = round(r(N),5)
 32. *Number of people in group who die by the end of the year
. qui safecount if ckd_group==2 & ckd_progression==6
 33. local deceased_ckd3_`x'`imd' = round(r(N),5)
 34. 
. **CKD stage 4/5 without KRT
. *Number of people in group (baseline_ckd4_`x'`imd') at the beginning of each year ckd4_`x'`imd'
. qui safecount if ckd_group==3
 35. local baseline_ckd4_`x'`imd' = round(r(N),5)
 36. *Number of people in group who do not progress by the end of the year
. qui safecount if ckd_group==3 & ckd_progression==0
 37. local none_ckd4_`x'`imd' = round(r(N),5)
 38. *Number of people in group who progress to dialysis by the end of the year
. qui safecount if ckd_group==3 & ckd_progression==3
 39. local dialysis_ckd4_`x'`imd' = round(r(N),5)
 40. *Number of people in group who progress to kidney transplant by the end of the year
. qui safecount if ckd_group==3 & ckd_progression==4
 41. local kt_ckd4_`x'`imd' = round(r(N),5)
 42. *Number of people in group who progress to KRT (unclear modality) by the end of the year
. qui safecount if ckd_group==3 & ckd_progression==5
 43. local unclear_ckd4_`x'`imd' = round(r(N),5)
 44. *Number of people in group who die by the end of the year
. qui safecount if ckd_group==3 & ckd_progression==6
 45. local deceased_ckd4_`x'`imd' = round(r(N),5)
 46. 
. **Dialysis
. *Number of people in group (baseline_dialysis_`x'`imd') at the beginning of each year dialysis_`x'`imd'
. qui safecount if ckd_group==4
 47. local baseline_dialysis_`x'`imd' = round(r(N),5)
 48. *Number of people in group remaining on dialysis by the end of the year
. qui safecount if ckd_group==4 & ckd_progression==0
 49. local none_dialysis_`x'`imd' = round(r(N),5)
 50. *Number of people in group with kidney transplant by the end of the year
. qui safecount if ckd_group==4 & ckd_progression==4
 51. local kt_dialysis_`x'`imd' = round(r(N),5)
 52. *Number of people in group who die by the end of the year
. qui safecount if ckd_group==4 & ckd_progression==6
 53. local deceased_dialysis_`x'`imd' = round(r(N),5)
 54. 
. **Kidney transplant
. *Number of people in group (baseline_kt_`x'`imd') at the beginning of each year kt_`x'`imd'
. qui safecount if ckd_group==5
 55. local baseline_kt_`x'`imd' = round(r(N),5)
 56. *Number of people in group remaining with kidney transplant by the end of the year
. qui safecount if ckd_group==5 & ckd_progression==0
 57. local none_kt_`x'`imd' = round(r(N),5)
 58. *Number of people in group on dialysis by the end of the year
. qui safecount if ckd_group==5 & ckd_progression==3
 59. local dialysis_kt_`x'`imd' = round(r(N),5)
 60. *Number of people in group who die by the end of the year
. qui safecount if ckd_group==5 & ckd_progression==6
 61. local deceased_kt_`x'`imd' = round(r(N),5)
 62. 
. **KRT unclear modality
. *Number of people in group (baseline_unclear_`x'`imd') at the beginning of each year unclear_`x'`imd'
. qui safecount if ckd_group==6
 63. local baseline_unclear_`x'`imd' = round(r(N),5)
 64. *Number of people in group remaining in group by the end of the year
. qui safecount if ckd_group==6 & ckd_progression==0
 65. local none_unclear_`x'`imd' = round(r(N),5)
 66. *Number of people in group on dialysis by the end of the year
. qui safecount if ckd_group==6 & ckd_progression==3
 67. local dialysis_unclear_`x'`imd' = round(r(N),5)
 68. *Number of people in group with kidney transplant by the end of the year
. qui safecount if ckd_group==6 & ckd_progression==4
 69. local kt_unclear_`x'`imd' = round(r(N),5)
 70. *Number of people in group who die by the end of the year
. qui safecount if ckd_group==6 & ckd_progression==6
 71. local deceased_unclear_`x'`imd' = round(r(N),5)
 72. }
 73. }
(1,276 observations deleted)
(640 observations deleted)
(1,276 observations deleted)
(624 observations deleted)
(1,276 observations deleted)
(659 observations deleted)
(1,276 observations deleted)
(641 observations deleted)
(1,276 observations deleted)
(640 observations deleted)
(1,343 observations deleted)
(615 observations deleted)
(1,343 observations deleted)
(615 observations deleted)
(1,343 observations deleted)
(614 observations deleted)
(1,343 observations deleted)
(592 observations deleted)
(1,343 observations deleted)
(608 observations deleted)
(1,276 observations deleted)
(699 observations deleted)
(1,276 observations deleted)
(691 observations deleted)
(1,276 observations deleted)
(702 observations deleted)
(1,276 observations deleted)
(690 observations deleted)
(1,276 observations deleted)
(702 observations deleted)
(1,257 observations deleted)
(644 observations deleted)
(1,257 observations deleted)
(693 observations deleted)
(1,257 observations deleted)
(682 observations deleted)
(1,257 observations deleted)
(676 observations deleted)
(1,257 observations deleted)
(665 observations deleted)
(1,323 observations deleted)
(668 observations deleted)
(1,323 observations deleted)
(669 observations deleted)
(1,323 observations deleted)
(655 observations deleted)
(1,323 observations deleted)
(657 observations deleted)
(1,323 observations deleted)
(675 observations deleted)
(1,281 observations deleted)
(630 observations deleted)
(1,281 observations deleted)
(641 observations deleted)
(1,281 observations deleted)
(628 observations deleted)
(1,281 observations deleted)
(650 observations deleted)
(1,281 observations deleted)
(635 observations deleted)

. **Populate table with rounded counts
. forvalues imd = 1/5 {
  2. local lab0: label imd `imd'
  3. file write tablecontent ("`lab0'") _n(2)
  4. 
. *Overall
. file write tablecontent ("All CKD groups") _tab _tab (`baseline_ckd_2017`imd'') _tab _tab (`baseline_ckd_2018`imd'') _tab _tab (`baseline_ckd_2019`imd'') _tab _tab (`baseline_ckd_2020`imd'') _tab _tab (`baseline_ckd_2021`imd'') _tab _tab (`baseline_c
> kd_2022`imd'') _n(2)
  5. file write tablecontent _tab ("No progression") _tab _tab (`none_ckd_2017`imd'') _tab _tab (`none_ckd_2018`imd'') _tab _tab (`none_ckd_2019`imd'') _tab _tab (`none_ckd_2020`imd'') _tab _tab (`none_ckd_2021`imd'') _tab _tab (`none_ckd_2022`imd'') _
> n
  6. file write tablecontent _tab ("CKD stage 4/5") _tab _tab (`ckd4_ckd_2017`imd'') _tab _tab (`ckd4_ckd_2018`imd'') _tab _tab (`ckd4_ckd_2019`imd'') _tab _tab (`ckd4_ckd_2020`imd'') _tab _tab (`ckd4_ckd_2021`imd'') _tab _tab (`ckd4_ckd_2022`imd'') _n
  7. file write tablecontent _tab ("Dialysis") _tab _tab (`dialysis_ckd_2017`imd'') _tab _tab (`dialysis_ckd_2018`imd'') _tab _tab (`dialysis_ckd_2019`imd'') _tab _tab (`dialysis_ckd_2020`imd'') _tab _tab (`dialysis_ckd_2021`imd'') _tab _tab (`dialysis
> _ckd_2022`imd'') _n
  8. file write tablecontent _tab ("Transplant") _tab _tab (`kt_ckd_2017`imd'') _tab _tab (`kt_ckd_2018`imd'') _tab _tab (`kt_ckd_2019`imd'') _tab _tab (`kt_ckd_2020`imd'') _tab _tab (`kt_ckd_2021`imd'') _tab _tab (`kt_ckd_2022`imd'') _n
  9. file write tablecontent _tab ("KRT unclear") _tab _tab (`unclear_ckd_2017`imd'') _tab _tab (`unclear_ckd_2018`imd'') _tab _tab (`unclear_ckd_2019`imd'') _tab _tab (`unclear_ckd_2020`imd'') _tab _tab (`unclear_ckd_2021`imd'') _tab _tab (`unclear_ck
> d_2022`imd'') _n
 10. file write tablecontent _tab ("Deceased") _tab _tab (`deceased_ckd_2017`imd'') _tab _tab (`deceased_ckd_2018`imd'') _tab _tab (`deceased_ckd_2019`imd'') _tab _tab (`deceased_ckd_2020`imd'') _tab _tab (`deceased_ckd_2021`imd'') _tab _tab (`deceased
> _ckd_2022`imd'') _n(2)
 11. 
. *CKD stage 3
. file write tablecontent ("CKD stage 3") _tab _tab (`baseline_ckd3_2017`imd'') _tab _tab (`baseline_ckd3_2018`imd'') _tab _tab (`baseline_ckd3_2019`imd'') _tab _tab (`baseline_ckd3_2020`imd'') _tab _tab (`baseline_ckd3_2021`imd'') _tab _tab (`baseline
> _ckd3_2022`imd'') _n(2)
 12. file write tablecontent _tab ("No progression") _tab _tab (`none_ckd3_2017`imd'') _tab _tab (`none_ckd3_2018`imd'') _tab _tab (`none_ckd3_2019`imd'') _tab _tab (`none_ckd3_2020`imd'') _tab _tab (`none_ckd3_2021`imd'') _tab _tab (`none_ckd3_2022`im
> d'') _n
 13. file write tablecontent _tab ("CKD stage 4/5") _tab _tab (`ckd4_ckd3_2017`imd'') _tab _tab (`ckd4_ckd3_2018`imd'') _tab _tab (`ckd4_ckd3_2019`imd'') _tab _tab (`ckd4_ckd3_2020`imd'') _tab _tab (`ckd4_ckd3_2021`imd'') _tab _tab (`ckd4_ckd3_2022`imd
> '') _n
 14. file write tablecontent _tab ("Dialysis") _tab _tab (`dialysis_ckd3_2017`imd'') _tab _tab (`dialysis_ckd3_2018`imd'') _tab _tab (`dialysis_ckd3_2019`imd'') _tab _tab (`dialysis_ckd3_2020`imd'') _tab _tab (`dialysis_ckd3_2021`imd'') _tab _tab (`dia
> lysis_ckd3_2022`imd'') _n
 15. file write tablecontent _tab ("Transplant") _tab _tab (`kt_ckd3_2017`imd'') _tab _tab (`kt_ckd3_2018`imd'') _tab _tab (`kt_ckd3_2019`imd'') _tab _tab (`kt_ckd3_2020`imd'') _tab _tab (`kt_ckd3_2021`imd'') _tab _tab (`kt_ckd3_2022`imd'') _n
 16. file write tablecontent _tab ("KRT unclear") _tab _tab (`unclear_ckd3_2017`imd'') _tab _tab (`unclear_ckd3_2018`imd'') _tab _tab (`unclear_ckd3_2019`imd'') _tab _tab (`unclear_ckd3_2020`imd'') _tab _tab (`unclear_ckd3_2021`imd'') _tab _tab (`uncle
> ar_ckd3_2022`imd'') _n
 17. file write tablecontent _tab ("Deceased") _tab _tab (`deceased_ckd3_2017`imd'') _tab _tab (`deceased_ckd3_2018`imd'') _tab _tab (`deceased_ckd3_2019`imd'') _tab _tab (`deceased_ckd3_2020`imd'') _tab _tab (`deceased_ckd3_2021`imd'') _tab _tab (`dec
> eased_ckd3_2022`imd'') _n(2)
 18. 
. *CKD stage 4/5 without KRT
. file write tablecontent ("CKD stage 4/5") _tab _tab (`baseline_ckd4_2017`imd'') _tab _tab (`baseline_ckd4_2018`imd'') _tab _tab (`baseline_ckd4_2019`imd'') _tab _tab (`baseline_ckd4_2020`imd'') _tab _tab (`baseline_ckd4_2021`imd'') _tab _tab (`baseli
> ne_ckd4_2022`imd'') _n(2)
 19. file write tablecontent _tab ("No progression") _tab _tab (`none_ckd4_2017`imd'') _tab _tab (`none_ckd4_2018`imd'') _tab _tab (`none_ckd4_2019`imd'') _tab _tab (`none_ckd4_2020`imd'') _tab _tab (`none_ckd4_2021`imd'') _tab _tab (`none_ckd4_2022`im
> d'') _n
 20. file write tablecontent _tab ("Dialysis") _tab _tab (`dialysis_ckd4_2017`imd'') _tab _tab (`dialysis_ckd4_2018`imd'') _tab _tab (`dialysis_ckd4_2019`imd'') _tab _tab (`dialysis_ckd4_2020`imd'') _tab _tab (`dialysis_ckd4_2021`imd'') _tab _tab (`dia
> lysis_ckd4_2022`imd'') _n
 21. file write tablecontent _tab ("Transplant") _tab _tab (`kt_ckd4_2017`imd'') _tab _tab (`kt_ckd4_2018`imd'') _tab _tab (`kt_ckd4_2019`imd'') _tab _tab (`kt_ckd4_2020`imd'') _tab _tab (`kt_ckd4_2021`imd'') _tab _tab (`kt_ckd4_2022`imd'') _n
 22. file write tablecontent _tab ("KRT unclear") _tab _tab (`unclear_ckd4_2017`imd'') _tab _tab (`unclear_ckd4_2018`imd'') _tab _tab (`unclear_ckd4_2019`imd'') _tab _tab (`unclear_ckd4_2020`imd'') _tab _tab (`unclear_ckd4_2021`imd'') _tab _tab (`uncle
> ar_ckd4_2022`imd'') _n
 23. file write tablecontent _tab ("Deceased") _tab _tab (`deceased_ckd4_2017`imd'') _tab _tab (`deceased_ckd4_2018`imd'') _tab _tab (`deceased_ckd4_2019`imd'') _tab _tab (`deceased_ckd4_2020`imd'') _tab _tab (`deceased_ckd4_2021`imd'') _tab _tab (`dec
> eased_ckd4_2022`imd'') _n(2)
 24. 
. *Dialysis
. file write tablecontent ("Dialysis") _tab _tab (`baseline_dialysis_2017`imd'') _tab _tab (`baseline_dialysis_2018`imd'') _tab _tab (`baseline_dialysis_2019`imd'') _tab _tab (`baseline_dialysis_2020`imd'') _tab _tab (`baseline_dialysis_2021`imd'') _ta
> b _tab (`baseline_dialysis_2022`imd'') _n(2)
 25. file write tablecontent _tab ("No progression") _tab _tab (`none_dialysis_2017`imd'') _tab _tab (`none_dialysis_2018`imd'') _tab _tab (`none_dialysis_2019`imd'') _tab _tab (`none_dialysis_2020`imd'') _tab _tab (`none_dialysis_2021`imd'') _tab _tab
>  (`none_dialysis_2022`imd'') _n
 26. file write tablecontent _tab ("Transplant") _tab _tab (`kt_dialysis_2017`imd'') _tab _tab (`kt_dialysis_2018`imd'') _tab _tab (`kt_dialysis_2019`imd'') _tab _tab (`kt_dialysis_2020`imd'') _tab _tab (`kt_dialysis_2021`imd'') _tab _tab (`kt_dialysis
> _2022`imd'') _n
 27. file write tablecontent _tab ("Deceased") _tab _tab (`deceased_dialysis_2017`imd'') _tab _tab (`deceased_dialysis_2018`imd'') _tab _tab (`deceased_dialysis_2019`imd'') _tab _tab (`deceased_dialysis_2020`imd'') _tab _tab (`deceased_dialysis_2021`im
> d'') _tab _tab (`deceased_dialysis_2022`imd'') _n(2)
 28. 
. *Kidney Transplant
. file write tablecontent ("Transplant") _tab _tab (`baseline_kt_2017`imd'') _tab _tab (`baseline_kt_2018`imd'') _tab _tab (`baseline_kt_2019`imd'') _tab _tab (`baseline_kt_2020`imd'') _tab _tab (`baseline_kt_2021`imd'') _tab _tab (`baseline_kt_2022`im
> d'') _n(2)
 29. file write tablecontent _tab ("No progression") _tab _tab (`none_kt_2017`imd'') _tab _tab (`none_kt_2018`imd'') _tab _tab (`none_kt_2019`imd'') _tab _tab (`none_kt_2020`imd'') _tab _tab (`none_kt_2021`imd'') _tab _tab (`none_kt_2022`imd'') _n
 30. file write tablecontent _tab ("Dialysis") _tab _tab (`dialysis_kt_2017`imd'') _tab _tab (`dialysis_kt_2018`imd'') _tab _tab (`dialysis_kt_2019`imd'') _tab _tab (`dialysis_kt_2020`imd'') _tab _tab (`dialysis_kt_2021`imd'') _tab _tab (`dialysis_kt_2
> 022`imd'') _n
 31. file write tablecontent _tab ("Deceased") _tab _tab (`deceased_kt_2017`imd'') _tab _tab (`deceased_kt_2018`imd'') _tab _tab (`deceased_kt_2019`imd'') _tab _tab (`deceased_kt_2020`imd'') _tab _tab (`deceased_kt_2021`imd'') _tab _tab (`deceased_kt_2
> 022`imd'') _n(2)
 32. 
. *KRT unclear modality
. file write tablecontent ("KRT unclear") _tab _tab (`baseline_unclear_2017`imd'') _tab _tab (`baseline_unclear_2018`imd'') _tab _tab (`baseline_unclear_2019`imd'') _tab _tab (`baseline_unclear_2020`imd'') _tab _tab (`baseline_unclear_2021`imd'') _tab 
> _tab (`baseline_unclear_2022`imd'') _n(2)
 33. file write tablecontent _tab ("No progression") _tab _tab (`none_unclear_2017`imd'') _tab _tab (`none_unclear_2018`imd'') _tab _tab (`none_unclear_2019`imd'') _tab _tab (`none_unclear_2020`imd'') _tab _tab (`none_unclear_2021`imd'') _tab _tab (`no
> ne_unclear_2022`imd'') _n
 34. file write tablecontent _tab ("Dialysis") _tab _tab (`dialysis_unclear_2017`imd'') _tab _tab (`dialysis_unclear_2018`imd'') _tab _tab (`dialysis_unclear_2019`imd'') _tab _tab (`dialysis_unclear_2020`imd'') _tab _tab (`dialysis_unclear_2021`imd'') 
> _tab _tab (`dialysis_unclear_2022`imd'') _n
 35. file write tablecontent _tab ("Transplant") _tab _tab (`kt_unclear_2017`imd'') _tab _tab (`kt_unclear_2018`imd'') _tab _tab (`kt_unclear_2019`imd'') _tab _tab (`kt_unclear_2020`imd'') _tab _tab (`kt_unclear_2021`imd'') _tab _tab (`kt_unclear_2022`
> imd'') _n
 36. file write tablecontent _tab ("Deceased") _tab _tab (`deceased_unclear_2017`imd'') _tab _tab (`deceased_unclear_2018`imd'') _tab _tab (`deceased_unclear_2019`imd'') _tab _tab (`deceased_unclear_2020`imd'') _tab _tab (`deceased_unclear_2021`imd'') 
> _tab _tab (`deceased_unclear_2022`imd'') _n(2)
 37. }

. 
. file close tablecontent

. 
. **Redact counts of 0 from each column in table (adapted from code by Emily Herrett)
. clear

. import delimited ./output/ckd_progression_imd.csv
(encoding automatically selected: ISO-8859-1)
(14 vars, 170 obs)

. local columns " "n_2017" "april_2018" "n_2018" "april_2019" "n_2019" "april_2020" "n_2020" "april_2021" "n_2021" "april_2022" "n_2022" "april_2023" "

. foreach col in `columns' {
  2. replace `col'=. if `col'<=5
  3. }
(2 real changes made, 2 to missing)
(51 real changes made, 51 to missing)
(1 real change made, 1 to missing)
(40 real changes made, 40 to missing)
(3 real changes made, 3 to missing)
(48 real changes made, 48 to missing)
(1 real change made, 1 to missing)
(43 real changes made, 43 to missing)
(1 real change made, 1 to missing)
(52 real changes made, 52 to missing)
(2 real changes made, 2 to missing)
(43 real changes made, 43 to missing)

.         
. export delimited "./output/ckd_progression_imd.csv", replace
file ./output/ckd_progression_imd.csv saved

. 
end of do-file

. use "C:\Users\lsh1703468\Dropbox\PhD\causal inference\what if\nhefs_stata\nhefs.dta", clear

. cd ..
C:\users\lsh1703468\documents\repo

. cd ..
C:\users\lsh1703468\documents

. cd ..
C:\users\lsh1703468

. do "C:\Users\lsh1703468\Dropbox\PhD\causal inference\what if\stata_part2\chapter17.do"

. /***************************************************************
> Stata code for Causal Inference: What If by Miguel Hernan & Jamie Robins
> Date: 10/10/2019
> Author: Eleanor Murray 
> For errors contact: ejmurray@bu.edu
> ***************************************************************/
. 
. /***************************************************************
> PROGRAM 17.1
> Nonparametric estimation of survival curves
> Data from NHEFS
> Section 17.1
> ***************************************************************/
. clear

. use "nhefs.dta"
file nhefs.dta not found
r(601);

end of do-file

r(601);

. cd dropbox
C:\users\lsh1703468\dropbox

. cd phd
C:\users\lsh1703468\dropbox\phd

. cd causal inference
invalid syntax
r(198);

. cd causal_inference
C:\users\lsh1703468\dropbox\phd\causal_inference

. cd what_if
C:\users\lsh1703468\dropbox\phd\causal_inference\what_if

. do "C:\Users\lsh1703468\Dropbox\PhD\causal inference\what if\stata_part2\chapter17.do"
file C:\Users\lsh1703468\Dropbox\PhD\causal inference\what if\stata_part2\chapter17.do not found
r(601);

. do "C:\Users\lsh1703468\Dropbox\PhD\causal_inference\what_if\chapter17.do"

. /***************************************************************
> Stata code for Causal Inference: What If by Miguel Hernan & Jamie Robins
> Date: 10/10/2019
> Author: Eleanor Murray 
> For errors contact: ejmurray@bu.edu
> ***************************************************************/
. 
. /***************************************************************
> PROGRAM 17.1
> Nonparametric estimation of survival curves
> Data from NHEFS
> Section 17.1
> ***************************************************************/
. clear

. use "nhefs.dta"

. 
. /*Some preprocessing of the data*/
. gen survtime = .
(1,629 missing values generated)

. replace survtime = 120 if death == 0
(1,311 real changes made)

. replace survtime = (yrdth - 83)*12 + modth if death ==1
(318 real changes made)

. * yrdth ranges from 83 to 92*
. 
. tab death qsmk

     death |
   between | quit smoking between
  1983 and |   baseline and 1982
      1992 |         0          1 |     Total
-----------+----------------------+----------
         0 |       985        326 |     1,311 
         1 |       216        102 |       318 
-----------+----------------------+----------
     Total |     1,201        428 |     1,629 

. 
. /*Kaplan-Meier graph of observed survival over time, by quitting smoking*/
. *For now, we use the stset function in Stata*
. stset survtime, failure(death=1)

Survival-time data settings

         Failure event: death==1
Observed time interval: (0, survtime]
     Exit on or before: failure

--------------------------------------------------------------------------
      1,629  total observations
          0  exclusions
--------------------------------------------------------------------------
      1,629  observations remaining, representing
        318  failures in single-record/single-failure data
    176,764  total analysis time at risk and under observation
                                                At risk from t =         0
                                     Earliest observed entry t =         0
                                          Last observed exit t =       120

. sts graph, by(qsmk) xlabel(0(12)120)

        Failure _d: death==1
  Analysis time _t: survtime

. 
. 
. /***************************************************************
> PROGRAM 17.2
> Parametric estimation of survival curves via hazards model
> Data from NHEFS
> Section 17.1
> Generates Figure 17.4
> ***************************************************************/
. 
. /**Create person-month dataset for survival analyses**/
. 
. /*We want our new dataset to include 1 observation per person per month alive, starting at time = 0*/
. *Individuals who survive to the end of follow-up will have 119 time points*
. *Individuals who die will have survtime - 1 time points*
. clear

. use "nhefs.dta"

. 
. gen survtime = .
(1,629 missing values generated)

. replace survtime = 120 if death == 0
(1,311 real changes made)

. replace survtime = (yrdth - 83)*12 + modth if death ==1
(318 real changes made)

. 
. *expand data to person-time*
. gen time = 0

. expand survtime if time == 0
(175,135 observations created)

. bysort seqn: replace time = _n - 1
(175,135 real changes made)

. 
. *Create event variable*
. gen event = 0

. replace event = 1 if time == survtime - 1 & death == 1
(318 real changes made)

. tab event

      event |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    176,446       99.82       99.82
          1 |        318        0.18      100.00
------------+-----------------------------------
      Total |    176,764      100.00

. 
. *Create time-squared variable for analyses*
. gen timesq = time*time

. 
. *Save the dataset to your working directory for future use*
. save nhefs_surv, replace
(file nhefs_surv.dta not found)
file nhefs_surv.dta saved

. 
. /**Hazard ratios**/
. clear

. 
. use "nhefs_surv.dta"

. 
. *Fit a pooled logistic hazards model *
. logistic event qsmk qsmk#c.time qsmk#c.time#c.time c.time c.time#c.time 

Logistic regression                                    Number of obs = 176,764
                                                       LR chi2(5)    =   24.02
                                                       Prob > chi2   =  0.0002
Log likelihood = -2315.6313                            Pseudo R2     =  0.0052

------------------------------------------------------------------------------------
             event | Odds ratio   Std. err.      z    P>|z|     [95% conf. interval]
-------------------+----------------------------------------------------------------
              qsmk |   1.398606   .5552063     0.85   0.398     .6423814    3.045074
                   |
       qsmk#c.time |
                1  |   1.012152   .0152103     0.80   0.422     .9827749    1.042407
                   |
qsmk#c.time#c.time |
                1  |   .9998388   .0001246    -1.29   0.196     .9995946    1.000083
                   |
              time |    1.01979     .00858     2.33   0.020     1.003112    1.036746
                   |
     c.time#c.time |   .9998744   .0000668    -1.88   0.060     .9997434    1.000005
                   |
             _cons |   .0009159   .0002115   -30.29   0.000     .0005825    .0014402
------------------------------------------------------------------------------------
Note: _cons estimates baseline odds.

. 
. 
. /**Survival curves: run regression then do:**/
. 
. *Create a dataset with all time points under each treatment level*
. *Re-expand data with rows for all timepoints*
. drop if time != 0
(175,135 observations deleted)

. expand 120 if time ==0 
(193,851 observations created)

. bysort seqn: replace time = _n - 1       
(193,851 real changes made)

.                 
. *Create 2 copies of each subject, and set outcome to missing and treatment -- use only the newobs*
. expand 2 , generate(interv) 
(195,480 observations created)

. replace qsmk = interv   
(195,480 real changes made)

. 
. *Generate predicted event and survival probabilities for each person each month in copies*               
. predict pevent_k, pr

. gen psurv_k = 1-pevent_k

. keep seqn time qsmk interv psurv_k 

. 
. *Within copies, generate predicted survival over time*
. *Remember, survival is the product of conditional survival probabilities in each interval*      
. sort seqn interv time

. gen _t = time + 1

. gen psurv = psurv_k if _t ==1           
(387,702 missing values generated)

. bysort seqn interv: replace psurv = psurv_k*psurv[_t-1] if _t >1 
(387,702 real changes made)

. 
. *Display 10-year standardized survival, under interventions*
. *Note: since time starts at 0, month 119 is 10-year survival*
. by interv, sort: summarize psurv if time == 119

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Original

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       psurv |      1,629    .8201054           0   .8201054   .8201054

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Duplicat

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       psurv |      1,629    .7617865           0   .7617865   .7617865


. 
. *Graph of standardized survival over time, under interventions*
. *Note, we want our graph to start at 100% survival, so add an extra time point with P(surv) = 1*
. expand 2 if time ==0, generate(newtime)
(3,258 observations created)

. replace psurv  = 1 if newtime == 1
(3,258 real changes made)

. gen time2 = 0 if newtime ==1
(390,960 missing values generated)

. replace time2 = time + 1 if newtime == 0
(390,960 real changes made)

. *Separate the survival probabilities to allow plotting by intervention on qsmk*
. separate psurv, by(interv) 

Variable      Storage   Display    Value
    name         type    format    label      Variable label
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
psurv0          float   %9.0g                 psurv, interv == Original observation
psurv1          float   %9.0g                 psurv, interv == Duplicated observation

. *Plot the curves*
. twoway (line psurv0 time2, sort) (line psurv1 time2, sort) if interv > -1, ylabel(0.5(0.1)1.0) xlabel(0(12)120) ytitle("Survival probability") xtitle("Months of follow-up") legend(label(1 "A=0") label(2 "A=1
> "))

. 
. 
. /***************************************************************
> PROGRAM 17.3
> Estimation of survival curves via IP weighted hazards model
> Data from NHEFS
> Section 17.4
> Generates Figure 17.6
> ***************************************************************/
. 
. clear

. use "nhefs_surv.dta"

. 
. keep seqn event qsmk time sex race age education smokeintensity smkintensity82_71  smokeyrs exercise active wt71

. preserve 

. 
. *Estimate weights*
. logit qsmk sex race c.age##c.age ib(last).education c.smokeintensity##c.smokeintensity ///
> c.smokeyrs##c.smokeyrs ib(last).exercise ib(last).active c.wt71##c.wt71 if time == 0

Iteration 0:   log likelihood = -938.14308  
Iteration 1:   log likelihood = -884.53806  
Iteration 2:   log likelihood = -883.35064  
Iteration 3:   log likelihood = -883.34876  
Iteration 4:   log likelihood = -883.34876  

Logistic regression                                     Number of obs =  1,629
                                                        LR chi2(18)   = 109.59
                                                        Prob > chi2   = 0.0000
Log likelihood = -883.34876                             Pseudo R2     = 0.0584

---------------------------------------------------------------------------------------------------
                             qsmk | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
----------------------------------+----------------------------------------------------------------
                              sex |  -.5075218   .1482316    -3.42   0.001    -.7980505   -.2169932
                             race |  -.8502312   .2058722    -4.13   0.000    -1.253733   -.4467292
                              age |   .1030132   .0488996     2.11   0.035     .0071718    .1988547
                                  |
                      c.age#c.age |  -.0006052   .0005074    -1.19   0.233    -.0015998    .0003893
                                  |
                        education |
                               1  |  -.3796632   .2203948    -1.72   0.085     -.811629    .0523026
                               2  |  -.4779835   .2141771    -2.23   0.026    -.8977629   -.0582041
                               3  |  -.3639645   .1885776    -1.93   0.054    -.7335698    .0056409
                               4  |  -.4221892   .2717235    -1.55   0.120    -.9547574     .110379
                                  |
                   smokeintensity |  -.0651561   .0147589    -4.41   0.000    -.0940831   -.0362292
                                  |
c.smokeintensity#c.smokeintensity |   .0008461   .0002758     3.07   0.002     .0003054    .0013867
                                  |
                         smokeyrs |  -.0733708   .0269958    -2.72   0.007    -.1262816     -.02046
                                  |
            c.smokeyrs#c.smokeyrs |   .0008384   .0004435     1.89   0.059    -.0000307    .0017076
                                  |
                         exercise |
                               0  |  -.3550517   .1799293    -1.97   0.048    -.7077067   -.0023967
                               1  |    -.06364   .1351256    -0.47   0.638    -.3284812    .2012013
                                  |
                           active |
                               0  |  -.0683123   .2087269    -0.33   0.743    -.4774095    .3407849
                               1  |   -.057437   .2039967    -0.28   0.778    -.4572632    .3423892
                                  |
                             wt71 |  -.0128478   .0222829    -0.58   0.564    -.0565214    .0308258
                                  |
                    c.wt71#c.wt71 |   .0001209   .0001352     0.89   0.371     -.000144    .0003859
                                  |
                            _cons |  -1.185875   1.263142    -0.94   0.348    -3.661588    1.289838
---------------------------------------------------------------------------------------------------

. predict p_qsmk, pr

. logit qsmk if time ==0 

Iteration 0:   log likelihood = -938.14308  
Iteration 1:   log likelihood = -938.14308  

Logistic regression                                     Number of obs =  1,629
                                                        LR chi2(0)    =   0.00
                                                        Prob > chi2   =      .
Log likelihood = -938.14308                             Pseudo R2     = 0.0000

------------------------------------------------------------------------------
        qsmk | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       _cons |  -1.031787   .0562947   -18.33   0.000    -1.142122   -.9214511
------------------------------------------------------------------------------

. predict num, pr

. gen sw=num/p_qsmk if qsmk==1
(131,935 missing values generated)

. replace sw=(1-num)/(1-p_qsmk) if qsmk==0
(131,935 real changes made)

. summarize sw

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
          sw |    176,764     1.00093    .2799415   .3312358   4.205432

. 
. *IP weighted survival by smoking cessation*
. logit event qsmk qsmk#c.time qsmk#c.time#c.time c.time c.time#c.time [pweight=sw] , cluster(seqn) 

Iteration 0:   log pseudolikelihood = -2321.9656  
Iteration 1:   log pseudolikelihood = -2313.2847  
Iteration 2:   log pseudolikelihood = -2313.1005  
Iteration 3:   log pseudolikelihood = -2313.1004  

Logistic regression                                    Number of obs = 176,764
                                                       Wald chi2(5)  =   20.74
                                                       Prob > chi2   =  0.0009
Log pseudolikelihood = -2313.1004                      Pseudo R2     =  0.0038

                                     (Std. err. adjusted for 1,629 clusters in seqn)
------------------------------------------------------------------------------------
                   |               Robust
             event | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------------+----------------------------------------------------------------
              qsmk |  -.1793825   .3959051    -0.45   0.650    -.9553422    .5965771
                   |
       qsmk#c.time |
                1  |   .0189454   .0145052     1.31   0.192    -.0094842     .047375
                   |
qsmk#c.time#c.time |
                1  |  -.0002103   .0001169    -1.80   0.072    -.0004395    .0000189
                   |
              time |   .0188875   .0075331     2.51   0.012     .0041229     .033652
                   |
     c.time#c.time |  -.0001181   .0000621    -1.90   0.057    -.0002398    3.58e-06
                   |
             _cons |  -6.896996   .2059199   -33.49   0.000    -7.300591     -6.4934
------------------------------------------------------------------------------------

. 
. *Create a dataset with all time points under each treatment level*
. *Re-expand data with rows for all timepoints*
. drop if time != 0
(175,135 observations deleted)

. expand 120 if time ==0 
(193,851 observations created)

. bysort seqn: replace time = _n - 1               
(193,851 real changes made)

.                 
. *Create 2 copies of each subject, and set outcome to missing and treatment -- use only the newobs*
. expand 2 , generate(interv) 
(195,480 observations created)

. replace qsmk = interv   
(195,480 real changes made)

. 
. *Generate predicted event and survival probabilities for each person each month in copies*               
. predict pevent_k, pr

. gen psurv_k = 1-pevent_k

. keep seqn time qsmk interv psurv_k 

. 
. *Within copies, generate predicted survival over time*
. *Remember, survival is the product of conditional survival probabilities in each interval*      
. sort seqn interv time

. gen _t = time + 1

. gen psurv = psurv_k if _t ==1           
(387,702 missing values generated)

. bysort seqn interv: replace psurv = psurv_k*psurv[_t-1] if _t >1 
(387,702 real changes made)

. 
. *Display 10-year standardized survival, under interventions*
. *Note: since time starts at 0, month 119 is 10-year survival*
. by interv, sort: summarize psurv if time == 119

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Original

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       psurv |      1,629    .8046517           0   .8046517   .8046517

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Duplicat

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       psurv |      1,629     .806667           0    .806667    .806667


. 
. quietly summarize psurv if(interv==0 & time ==119)

. matrix input observe = (0,`r(mean)')

. quietly summarize psurv if(interv==1 & time ==119)

. matrix observe = (observe \1,`r(mean)')

. matrix observe = (observe \3, observe[2,2]-observe[1,2]) 

. matrix list observe

observe[3,2]
           c1         c2
r1          0  .80465174
r2          1  .80666697
r3          3  .00201523

. 
. 
. *Graph of standardized survival over time, under interventions*
. *Note: since our outcome model has no covariates, we can plot psurv directly. If we had covariates we would need to stratify or average across the values*
. expand 2 if time ==0, generate(newtime)
(3,258 observations created)

. replace psurv  = 1 if newtime == 1
(3,258 real changes made)

. gen time2 = 0 if newtime ==1
(390,960 missing values generated)

. replace time2 = time + 1 if newtime == 0
(390,960 real changes made)

. separate psurv, by(interv) 

Variable      Storage   Display    Value
    name         type    format    label      Variable label
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
psurv0          float   %9.0g                 psurv, interv == Original observation
psurv1          float   %9.0g                 psurv, interv == Duplicated observation

. twoway (line psurv0 time2, sort) (line psurv1 time2, sort) if interv > -1, ylabel(0.5(0.1)1.0) xlabel(0(12)120) ytitle("Survival probability") xtitle("Months of follow-up") legend(label(1 "A=0") label(2 "A=1
> "))

. *remove extra timepoint*
. drop if newtime == 1
(3,258 observations deleted)

. drop time2

. 
. restore

. 
. **Bootstraps**
. save nhefs_std1 , replace
(file nhefs_std1.dta not found)
file nhefs_std1.dta saved

.  
. capture program drop bootipw_surv 

. program define bootipw_surv , rclass
  1.         u nhefs_std1 , clear
  2.                 preserve
  3.                 bsample, cluster(seqn) idcluster(newseqn)       
  4.                 
.                 logit qsmk sex race c.age##c.age ib(last).education c.smokeintensity##c.smokeintensity ///
>                 c.smokeyrs##c.smokeyrs ib(last).exercise ib(last).active c.wt71##c.wt71 if time == 0
  5.                 predict p_qsmk, pr
  6.                 logit qsmk if time ==0 
  7.                 predict num, pr
  8.                 gen sw=num/p_qsmk if qsmk==1
  9.                 replace sw=(1-num)/(1-p_qsmk) if qsmk==0
 10. 
.                 logit event qsmk qsmk#c.time qsmk#c.time#c.time c.time c.time#c.time  [pweight=sw] , cluster(newseqn) 
 11.         
.                 drop if time != 0
 12.                 expand 120 if time ==0 
 13.                 bysort newseqn: replace time = _n - 1            
 14.                 expand 2 , generate(interv_b) 
 15.                 replace qsmk = interv_b 
 16.                 
.                 predict pevent_k, pr
 17.                 gen psurv_k = 1-pevent_k
 18.                 keep newseqn time qsmk interv_b psurv_k 
 19. 
.                 sort newseqn interv_b time
 20.                 gen _t = time + 1
 21.                 gen psurv = psurv_k if _t ==1           
 22.                 bysort newseqn interv_b: replace psurv = psurv_k*psurv[_t-1] if _t >1 
 23.                 drop if time != 119
 24.                 bysort interv_b: egen meanS_b = mean(psurv)
 25.                 keep newseqn qsmk  meanS_b 
 26.         drop if newseqn != 1  /* only need one pair */
 27.         
.                 drop newseqn            
 28.                 
.             return scalar boot_0 = meanS_b[1]
 29.             return scalar boot_1 = meanS_b[2]
 30.             return scalar  boot_diff = return(boot_1) - return(boot_0)
 31.            restore
 32. end             

. set rmsg on
r; t=0.00 15:13:39

. simulate PrY_a0 = r(boot_0) PrY_a1 = r(boot_1)  difference=r(boot_diff) , reps(10) seed(1)  : bootipw_surv

      Command: bootipw_surv
       PrY_a0: r(boot_0)
       PrY_a1: r(boot_1)
   difference: r(boot_diff)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
r; t=39.70 15:14:18

. set rmsg off 

.  
. matrix pe = observe[1..3, 2]'

. bstat, stat(pe) n(1629)

Bootstrap results                                        Number of obs = 1,629
                                                         Replications  =    10

------------------------------------------------------------------------------
             |   Observed   Bootstrap                         Normal-based
             | coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
      PrY_a0 |   .8046517   .0102567    78.45   0.000     .7845489    .8247546
      PrY_a1 |    .806667   .0137312    58.75   0.000     .7797543    .8335797
  difference |   .0020152   .0134164     0.15   0.881    -.0242805    .0283109
------------------------------------------------------------------------------

. 
. 
. /***************************************************************
> PROGRAM 17.4
> Estimating of survival curves via g-formula
> Data from NHEFS
> Section 17.5
> Generates Figure 17.7
> ***************************************************************/
. clear

. use "nhefs_surv.dta"

. 
. keep seqn event qsmk time sex race age education smokeintensity smkintensity82_71  smokeyrs exercise active wt71 

. preserve 

.  
. quietly logistic event qsmk qsmk#c.time  qsmk#c.time#c.time time c.time#c.time  ///
>         sex race c.age##c.age ib(last).education c.smokeintensity##c.smokeintensity ///
>         c.smokeyrs##c.smokeyrs ib(last).exercise ib(last).active c.wt71##c.wt71 , cluster(seqn) 

.                         
. drop if time != 0
(175,135 observations deleted)

. expand 120 if time ==0 
(193,851 observations created)

. bysort seqn: replace time = _n - 1                              
(193,851 real changes made)

. expand 2 , generate(interv) 
(195,480 observations created)

. replace qsmk = interv            
(195,480 real changes made)

. predict pevent_k, pr

. gen psurv_k = 1-pevent_k

. keep seqn  time qsmk interv psurv_k                     

. sort seqn interv time

. gen _t = time + 1

. gen psurv = psurv_k if _t ==1           
(387,702 missing values generated)

. bysort seqn interv:   replace psurv = psurv_k*psurv[_t-1] if _t >1 
(387,702 real changes made)

. by interv, sort: summarize psurv if time == 119

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Original

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       psurv |      1,629    .8051398      .21233   .0077733   .9903885

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Duplicat

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       psurv |      1,629    .8070256    .2110201   .0082942   .9905184


. 
. keep qsmk interv psurv time   

.                 
. bysort interv : egen meanS = mean(psurv) if time == 119
(387,702 missing values generated)

. by interv: summarize meanS

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Original

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       meanS |      1,629    .8051398           0   .8051398   .8051398

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> interv = Duplicat

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       meanS |      1,629    .8070256           0   .8070256   .8070256


. 
. quietly summarize meanS if(qsmk==0  & time ==119)

. matrix input observe = ( 0,`r(mean)')

. quietly summarize meanS if(qsmk==1  & time ==119)

. matrix observe = (observe \1,`r(mean)')

. matrix observe = (observe \2, observe[2,2]-observe[1,2]) 

. *Add some row/column descriptions and print results to screen*
. matrix rownames observe =  P(Y(a=0)=1) P(Y(a=1)=1) difference

. matrix colnames observe = interv survival

. 
. 
. *Graph standardized survival over time, under interventions*
. *Note: unlike in PROGRAM 17.3, we now have covariates so we first need to average survival across strata*
. bysort interv time : egen meanS_t = mean(psurv)

. *Now we can continue with the graph*
. expand 2 if time ==0, generate(newtime)
(3,258 observations created)

. replace meanS_t  = 1 if newtime == 1
(3,258 real changes made)

. gen time2 = 0 if newtime ==1
(390,960 missing values generated)

. replace time2 = time + 1 if newtime == 0
(390,960 real changes made)

. separate meanS_t, by(interv) 

Variable      Storage   Display    Value
    name         type    format    label      Variable label
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
meanS_t0        float   %9.0g                 meanS_t, interv == Original observation
meanS_t1        float   %9.0g                 meanS_t, interv == Duplicated observation

. twoway (line meanS_t0 time2, sort) (line meanS_t1 time2, sort), ylabel(0.5(0.1)1.0) xlabel(0(12)120) ytitle("Survival probability") xtitle("Months of follow-up") legend(label(1 "A=0") label(2 "A=1"))

. *remove extra timepoint*
. drop if newtime == 1
(3,258 observations deleted)

. 
. restore

. 
. *Bootstraps*
. save nhefs_std2 , replace
(file nhefs_std2.dta not found)
file nhefs_std2.dta saved

.  
. capture program drop bootstdz_surv 

. program define bootstdz_surv , rclass
  1.         u nhefs_std2 , clear
  2.                 preserve
  3.                 bsample, cluster(seqn) idcluster(newseqn)               
  4.         logistic event  qsmk qsmk#c.time  qsmk#c.time#c.time time c.time#c.time   ///
>                         sex race c.age##c.age ib(last).education ///
>                         c.smokeintensity##c.smokeintensity c.smkintensity82_71  ///
>                         c.smokeyrs##c.smokeyrs ib(last).exercise ib(last).active c.wt71##c.wt71 
  5.                  drop if time != 0      
  6.                 /*only predict on new version of data */
.             expand 120 if time ==0 
  7.             bysort newseqn: replace time = _n - 1                               
  8.             expand 2 , generate(interv_b) 
  9.             replace qsmk = interv_b              
 10.             predict pevent_k, pr
 11.             gen psurv_k = 1-pevent_k
 12.         keep newseqn  time qsmk psurv_k                         
 13.                 sort newseqn qsmk time
 14.             gen _t = time + 1
 15.             gen psurv = psurv_k if _t ==1       
 16.             bysort newseqn  qsmk:   replace psurv = psurv_k*psurv[_t-1] if _t >1 
 17.             drop  if time != 119   /* keep only last observation */
 18.                 keep  newseqn qsmk psurv    
 19.                 /* if time is in data for complete graph add time to bysort */  
.             bysort qsmk  : egen meanS_b = mean(psurv)
 20.                 keep newseqn qsmk  meanS_b 
 21.         drop if newseqn != 1  /* only need one pair */
 22.         
.                 drop newseqn            
 23.                 
.             return scalar boot_0 = meanS_b[1]
 24.             return scalar boot_1 = meanS_b[2]
 25.             return scalar  boot_diff = return(boot_1) - return(boot_0)
 26.            restore
 27. end             

. set rmsg on
r; t=0.00 15:14:27

. simulate PrY_a0 = r(boot_0) PrY_a1 = r(boot_1)  difference=r(boot_diff) , reps(10) seed(1)  : bootstdz_surv

      Command: bootstdz_surv
       PrY_a0: r(boot_0)
       PrY_a1: r(boot_1)
   difference: r(boot_diff)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
r; t=31.92 15:14:59

. set rmsg off 

.  
. matrix pe = observe[1..3, 2]'

. bstat, stat(pe) n(1629)

Bootstrap results                                        Number of obs = 1,629
                                                         Replications  =    10

------------------------------------------------------------------------------
             |   Observed   Bootstrap                         Normal-based
             | coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
      PrY_a0 |   .8051398   .0120205    66.98   0.000     .7815801    .8286995
      PrY_a1 |   .8070256   .0128219    62.94   0.000     .7818952     .832156
  difference |   .0018858   .0173225     0.11   0.913    -.0320656    .0358372
------------------------------------------------------------------------------

. 
end of do-file

. browse

. use "C:\Users\lsh1703468\Dropbox\PhD\causal_inference\what_if\nhefs.dta"

. browse

. exit, clear
